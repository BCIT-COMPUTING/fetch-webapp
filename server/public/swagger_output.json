{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "register info",
            "in": "body",
            "description": "Information for registering to the app.",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "JhonDoe"
                },
                "firstname": {
                  "type": "string",
                  "example": "Jhon"
                },
                "lastname": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jhondoe@yahoo.ca"
                },
                "password": {
                  "type": "string",
                  "example": "yourPasswordGoesHere"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New account has been created, returns the saved user.",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "string"
                },
                "firstname": {
                  "type": "string",
                  "example": "string"
                },
                "lastname": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "Credentials of a user for login purposes.",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "password": {
                  "type": "string",
                  "example": "someHashedPassword"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login token is successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "userInfo": {
                  "type": "object",
                  "properties": {}
                },
                "accessToken": {
                  "type": "string",
                  "example": "generated JWT token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/verifyJWT": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "register info",
            "in": "body",
            "description": "Verifies the JWT token submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "jwt": {
                  "type": "string",
                  "example": "someEncodedJWT"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if token could be verified, else returns false.",
            "schema": {
              "type": "boolean",
              "example": true,
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/dog/getDogs/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/dog/profile/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/dog/addDog": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "userID": {
                  "example": "any"
                },
                "photo": {
                  "example": "any"
                },
                "breed": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/dog/editDog": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "userID": {
                  "example": "any"
                },
                "photo": {
                  "example": "any"
                },
                "breed": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/dog/delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/dog/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/dog/checkUser/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/stats": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/reset": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/addLikes/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dogId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/addView/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dogId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/addDislikes/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dogId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/checkUser/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/match/allLikes/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}